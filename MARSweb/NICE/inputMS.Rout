
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ############### define functions ###############
> getZscore = function(snp_one,pheno_one) {                               #for (one snp* every indi) and (one pheno * every indi)
+         coeff = summary(lm(pheno_one~snp_one))$coeff
+         if (dim(coeff)[1] == 1) return(NA)
+         else if(is.na(coeff[2,4])) return(NA)   ### this has been changed
+         else {
+                 zscore = abs(qnorm(coeff[2,4]/2))
+                 if (coeff[2,3] >= 0) return(zscore)
+                 else return(-1*zscore)
+         }
+ }
> getBeta = function(snp_one,pheno_one) {                                  #for (one snp* every indi) and (one pheno * every indi)
+         coeff = summary(lm(pheno_one~snp_one))$coeff
+         if (dim(coeff)[1] == 1) return(NA)
+         else return(coeff[2,1])
+ }
> ############### get input ###############
> args=(commandArgs(TRUE))
> print(length(args))
[1] 3
> if(length(args)!=3){
+         print("Usage: R CMD BATCH --args -snp=X.txt -pheno=Y.txt -out=./ -- generateInputMS.R\n\t
+ 			snp is sample by snp matrix/vector\n\t
+ 			pheno is sample by phenotypes matrix\n")
+ 	stop ()
+ }
> for( i in c(1:3)){
+ 	str = unlist(strsplit(args[i],"="))[1]
+ 	if(str=="-snp") 	snp = unlist(strsplit(args[i],"="))[2]
+ 	else if(str=="-pheno") 	pheno = unlist(strsplit(args[i],"="))[2]
+ 	else if(str=="-out")    out = unlist(strsplit(args[i],"="))[2]
+ 	else{
+ 		print(str)
+ 	        print("Usage: R CMD BATCH --args -snp=X.txt -pheno=Y.txt -out=./ -- generateInputMS.R\n\t
+                         snp is sample by snp matrix/vector\n\t
+                         pheno is sample by phenotypes matrix\n")
+         	stop ()
+ 	}
+ }
> print(snp)
[1] "/DATA/taegun/simulation_data/jwjjoo/result/sample/X_rightdim.txt"
> print(pheno)
[1] "/DATA/taegun/simulation_data/jwjjoo/result/sample/Y_rightdim.txt"
> print(out)
[1] "./"
> ################# generate input for metasoft for snp i ################
> snp = as.matrix(read.table(snp))
> pheno = as.matrix(read.table(pheno))
> snpNum= dim(snp)[2]
> phenoNum= dim(pheno)[2]
> print(snpNum)
[1] 1000
> print(phenoNum)
[1] 1000
> Beta = mat.or.vec(snpNum,phenoNum)                                       # snp * pheno matrix
> Zscore = mat.or.vec(snpNum,phenoNum)
> for(i in c(1:phenoNum)){
+         print(i)
+         Beta[,i] = apply(snp, 2, getBeta, pheno[,i])                            # fill ith column (pheno i and all the snps)
+ 	Zscore[,i] = apply(snp, 2, getZscore, pheno[,i])
+ }
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] 8
[1] 9
[1] 10
[1] 11
[1] 12
[1] 13
[1] 14
[1] 15
[1] 16
[1] 17
[1] 18
[1] 19
[1] 20
[1] 21
[1] 22
[1] 23
[1] 24
[1] 25
[1] 26
[1] 27
[1] 28
[1] 29
[1] 30

Execution halted
